{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9178089,"sourceType":"datasetVersion","datasetId":5547044}],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/mennakhalifa04/natural-language-processing-with-disaster-tweets?scriptVersionId=193228516\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport re \nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nfrom nltk.corpus import stopwords\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-08-19T19:25:03.917412Z","iopub.execute_input":"2024-08-19T19:25:03.918056Z","iopub.status.idle":"2024-08-19T19:25:03.927326Z","shell.execute_reply.started":"2024-08-19T19:25:03.918018Z","shell.execute_reply":"2024-08-19T19:25:03.925982Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"/kaggle/input/train.csv\n/kaggle/input/test.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"import warnings \nwarnings.filterwarnings('ignore')","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:03.929899Z","iopub.execute_input":"2024-08-19T19:25:03.930306Z","iopub.status.idle":"2024-08-19T19:25:03.950158Z","shell.execute_reply.started":"2024-08-19T19:25:03.930274Z","shell.execute_reply":"2024-08-19T19:25:03.948794Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"code","source":"data = '/kaggle/input/train.csv'\ndf = pd.read_csv(data)\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:03.951765Z","iopub.execute_input":"2024-08-19T19:25:03.952179Z","iopub.status.idle":"2024-08-19T19:25:04.037048Z","shell.execute_reply.started":"2024-08-19T19:25:03.952147Z","shell.execute_reply":"2024-08-19T19:25:04.035845Z"},"trusted":true},"execution_count":7,"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"   id keyword location                                               text  \\\n0   1     NaN      NaN  Our Deeds are the Reason of this #earthquake M...   \n1   4     NaN      NaN             Forest fire near La Ronge Sask. Canada   \n2   5     NaN      NaN  All residents asked to 'shelter in place' are ...   \n3   6     NaN      NaN  13,000 people receive #wildfires evacuation or...   \n4   7     NaN      NaN  Just got sent this photo from Ruby #Alaska as ...   \n\n   target  \n0       1  \n1       1  \n2       1  \n3       1  \n4       1  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>keyword</th>\n      <th>location</th>\n      <th>text</th>\n      <th>target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Our Deeds are the Reason of this #earthquake M...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Forest fire near La Ronge Sask. Canada</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>5</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>All residents asked to 'shelter in place' are ...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>13,000 people receive #wildfires evacuation or...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Just got sent this photo from Ruby #Alaska as ...</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.target.value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:04.038397Z","iopub.execute_input":"2024-08-19T19:25:04.038765Z","iopub.status.idle":"2024-08-19T19:25:04.056877Z","shell.execute_reply.started":"2024-08-19T19:25:04.038734Z","shell.execute_reply":"2024-08-19T19:25:04.055595Z"},"trusted":true},"execution_count":8,"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"target\n0    4342\n1    3271\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"def text_clean(text, stop_words):\n    processed_text = []\n    for i, tweet in enumerate(text):\n        passed_words = []\n        tweet = re.sub(r'[^\\w\\s]', '', tweet.lower())\n        words = re.findall(r'\\w+', tweet.lower())\n        for word in words:\n            if word not in stop_words:\n                passed_words.append(word)\n        new_tweet = ' '.join(passed_words)\n        processed_text.append(new_tweet)\n    return processed_text\ndf.text = text_clean(df.text, stopwords.words('english'))\ndf.text.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:04.060949Z","iopub.execute_input":"2024-08-19T19:25:04.062187Z","iopub.status.idle":"2024-08-19T19:25:04.48127Z","shell.execute_reply.started":"2024-08-19T19:25:04.062146Z","shell.execute_reply":"2024-08-19T19:25:04.480022Z"},"trusted":true},"execution_count":9,"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"0         deeds reason earthquake may allah forgive us\n1                forest fire near la ronge sask canada\n2    residents asked shelter place notified officer...\n3    13000 people receive wildfires evacuation orde...\n4    got sent photo ruby alaska smoke wildfires pou...\nName: text, dtype: object"},"metadata":{}}]},{"cell_type":"code","source":"disaster_tweets = df[df['target'] == 1].text\nnon_disaster_tweets = df[df['target'] == 0].text\ndisaster_tweets","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:04.482514Z","iopub.execute_input":"2024-08-19T19:25:04.482895Z","iopub.status.idle":"2024-08-19T19:25:04.504304Z","shell.execute_reply.started":"2024-08-19T19:25:04.482865Z","shell.execute_reply":"2024-08-19T19:25:04.502976Z"},"trusted":true},"execution_count":10,"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"0            deeds reason earthquake may allah forgive us\n1                   forest fire near la ronge sask canada\n2       residents asked shelter place notified officer...\n3       13000 people receive wildfires evacuation orde...\n4       got sent photo ruby alaska smoke wildfires pou...\n                              ...                        \n7608    two giant cranes holding bridge collapse nearb...\n7609    aria_ahrary thetawniest control wild fires cal...\n7610    m194 0104 utc5km volcano hawaii httptcozdtoyd8ebj\n7611    police investigating ebike collided car little...\n7612    latest homes razed northern california wildfir...\nName: text, Length: 3271, dtype: object"},"metadata":{}}]},{"cell_type":"code","source":"from collections import Counter \nnew_stop_words = set()\ndisaster_words = Counter(' '.join(disaster_tweets).split()).most_common(30)\nnew_stop_words.update({'via', 'people', 'like', 'us', 'get'})\ndisaster_words","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:04.506041Z","iopub.execute_input":"2024-08-19T19:25:04.506393Z","iopub.status.idle":"2024-08-19T19:25:04.537779Z","shell.execute_reply.started":"2024-08-19T19:25:04.506364Z","shell.execute_reply":"2024-08-19T19:25:04.53622Z"},"trusted":true},"execution_count":11,"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"[('fire', 178),\n ('news', 136),\n ('via', 121),\n ('disaster', 117),\n ('california', 111),\n ('suicide', 110),\n ('police', 107),\n ('amp', 106),\n ('people', 105),\n ('killed', 93),\n ('like', 92),\n ('hiroshima', 86),\n ('storm', 85),\n ('crash', 84),\n ('fires', 84),\n ('us', 81),\n ('families', 81),\n ('train', 79),\n ('emergency', 76),\n ('buildings', 75),\n ('bomb', 74),\n ('2', 73),\n ('two', 71),\n ('mh370', 71),\n ('nuclear', 70),\n ('attack', 69),\n ('video', 69),\n ('wildfire', 69),\n ('get', 66),\n ('accident', 66)]"},"metadata":{}}]},{"cell_type":"code","source":"non_disaster_words = Counter(' '.join(non_disaster_tweets).split()).most_common(30)\nnew_stop_words.update({'im', 'new', 'get', 'dont', 'would', 'got', 'know', 'see', 'cant', 'still', 'want'})\nnon_disaster_words","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:04.539291Z","iopub.execute_input":"2024-08-19T19:25:04.5397Z","iopub.status.idle":"2024-08-19T19:25:04.575085Z","shell.execute_reply.started":"2024-08-19T19:25:04.539668Z","shell.execute_reply":"2024-08-19T19:25:04.57347Z"},"trusted":true},"execution_count":12,"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"[('like', 253),\n ('im', 243),\n ('amp', 192),\n ('new', 168),\n ('get', 163),\n ('dont', 141),\n ('one', 127),\n ('body', 112),\n ('via', 99),\n ('would', 97),\n ('video', 96),\n ('people', 91),\n ('love', 89),\n ('2', 86),\n ('know', 85),\n ('back', 84),\n ('time', 83),\n ('us', 83),\n ('got', 83),\n ('see', 82),\n ('cant', 81),\n ('emergency', 81),\n ('full', 81),\n ('day', 78),\n ('youtube', 76),\n ('going', 75),\n ('still', 72),\n ('fire', 72),\n ('go', 67),\n ('want', 67)]"},"metadata":{}}]},{"cell_type":"code","source":"df.text = text_clean(df.text, new_stop_words)\ndf.text","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:04.577086Z","iopub.execute_input":"2024-08-19T19:25:04.577485Z","iopub.status.idle":"2024-08-19T19:25:04.697137Z","shell.execute_reply.started":"2024-08-19T19:25:04.577453Z","shell.execute_reply":"2024-08-19T19:25:04.695674Z"},"trusted":true},"execution_count":13,"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"0               deeds reason earthquake may allah forgive\n1                   forest fire near la ronge sask canada\n2       residents asked shelter place notified officer...\n3       13000 receive wildfires evacuation orders cali...\n4       sent photo ruby alaska smoke wildfires pours s...\n                              ...                        \n7608    two giant cranes holding bridge collapse nearb...\n7609    aria_ahrary thetawniest control wild fires cal...\n7610    m194 0104 utc5km volcano hawaii httptcozdtoyd8ebj\n7611    police investigating ebike collided car little...\n7612    latest homes razed northern california wildfir...\nName: text, Length: 7613, dtype: object"},"metadata":{}}]},{"cell_type":"code","source":"new_stop_words.update(stopwords.words('english'))","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:04.698897Z","iopub.execute_input":"2024-08-19T19:25:04.699367Z","iopub.status.idle":"2024-08-19T19:25:04.706826Z","shell.execute_reply.started":"2024-08-19T19:25:04.699325Z","shell.execute_reply":"2024-08-19T19:25:04.705363Z"},"trusted":true},"execution_count":14,"outputs":[]},{"cell_type":"code","source":"df['tweet_length'] = df['text'].apply(len)\ntweet_length = df['tweet_length']\nplt.figure(figsize=(12, 6))\nsns.histplot(data=df, x='tweet_length', hue='target', multiple='stack', bins=30)\nplt.title('Tweet Lengths and Disaster Status')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:04.708435Z","iopub.execute_input":"2024-08-19T19:25:04.70934Z","iopub.status.idle":"2024-08-19T19:25:05.293761Z","shell.execute_reply.started":"2024-08-19T19:25:04.709305Z","shell.execute_reply":"2024-08-19T19:25:05.292463Z"},"trusted":true},"execution_count":15,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x600 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:05.29547Z","iopub.execute_input":"2024-08-19T19:25:05.295982Z","iopub.status.idle":"2024-08-19T19:25:05.311084Z","shell.execute_reply.started":"2024-08-19T19:25:05.295938Z","shell.execute_reply":"2024-08-19T19:25:05.309602Z"},"trusted":true},"execution_count":16,"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"   id keyword location                                               text  \\\n0   1     NaN      NaN          deeds reason earthquake may allah forgive   \n1   4     NaN      NaN              forest fire near la ronge sask canada   \n2   5     NaN      NaN  residents asked shelter place notified officer...   \n3   6     NaN      NaN  13000 receive wildfires evacuation orders cali...   \n4   7     NaN      NaN  sent photo ruby alaska smoke wildfires pours s...   \n\n   target  tweet_length  \n0       1            41  \n1       1            37  \n2       1            88  \n3       1            52  \n4       1            51  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>keyword</th>\n      <th>location</th>\n      <th>text</th>\n      <th>target</th>\n      <th>tweet_length</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>deeds reason earthquake may allah forgive</td>\n      <td>1</td>\n      <td>41</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>forest fire near la ronge sask canada</td>\n      <td>1</td>\n      <td>37</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>5</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>residents asked shelter place notified officer...</td>\n      <td>1</td>\n      <td>88</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>13000 receive wildfires evacuation orders cali...</td>\n      <td>1</td>\n      <td>52</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>sent photo ruby alaska smoke wildfires pours s...</td>\n      <td>1</td>\n      <td>51</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"from collections import defaultdict\ndictionary = defaultdict(int)\nfor i, tweet in enumerate(df['text']):\n    words = re.findall(r'\\w+', tweet)\n    for word in words:\n        if word not in dictionary.keys():\n            dictionary[word]+=1 ","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:05.313037Z","iopub.execute_input":"2024-08-19T19:25:05.313558Z","iopub.status.idle":"2024-08-19T19:25:05.406746Z","shell.execute_reply.started":"2024-08-19T19:25:05.313515Z","shell.execute_reply":"2024-08-19T19:25:05.405456Z"},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"code","source":"from sklearn.feature_extraction.text import CountVectorizer\ndef text_process(text):\n    sorted_words = sorted(dictionary.keys(), key=lambda x: dictionary[x])\n    vectorizer = CountVectorizer(max_features=5000, vocabulary=sorted_words)\n    encoded = vectorizer.fit_transform(text).toarray()  # Use 'text' directly here\n    return pd.DataFrame(encoded, columns=sorted_words)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:05.411604Z","iopub.execute_input":"2024-08-19T19:25:05.412043Z","iopub.status.idle":"2024-08-19T19:25:05.4199Z","shell.execute_reply.started":"2024-08-19T19:25:05.412008Z","shell.execute_reply":"2024-08-19T19:25:05.418364Z"},"trusted":true},"execution_count":18,"outputs":[]},{"cell_type":"code","source":"def new_df(test_df):\n    test_df['text'] = text_clean(test_df['text'], new_stop_words)\n    tweet_length = test_df['text'].apply(len)\n    vectorized = text_process(test_df['text'])\n    return pd.concat([vectorized, pd.Series(tweet_length, name='tweet_length')], axis=1)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:05.421754Z","iopub.execute_input":"2024-08-19T19:25:05.422323Z","iopub.status.idle":"2024-08-19T19:25:05.433804Z","shell.execute_reply.started":"2024-08-19T19:25:05.42229Z","shell.execute_reply":"2024-08-19T19:25:05.432355Z"},"trusted":true},"execution_count":19,"outputs":[]},{"cell_type":"code","source":"Y = df['target']","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:05.435448Z","iopub.execute_input":"2024-08-19T19:25:05.435948Z","iopub.status.idle":"2024-08-19T19:25:05.446193Z","shell.execute_reply.started":"2024-08-19T19:25:05.435911Z","shell.execute_reply":"2024-08-19T19:25:05.444842Z"},"trusted":true},"execution_count":20,"outputs":[]},{"cell_type":"code","source":"text = text_process(df['text'])","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:05.447958Z","iopub.execute_input":"2024-08-19T19:25:05.448448Z","iopub.status.idle":"2024-08-19T19:25:05.75107Z","shell.execute_reply.started":"2024-08-19T19:25:05.448403Z","shell.execute_reply":"2024-08-19T19:25:05.749905Z"},"trusted":true},"execution_count":21,"outputs":[]},{"cell_type":"code","source":"X = pd.concat([text, tweet_length], axis = 1)\nX","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:05.752728Z","iopub.execute_input":"2024-08-19T19:25:05.753755Z","iopub.status.idle":"2024-08-19T19:25:08.968354Z","shell.execute_reply.started":"2024-08-19T19:25:05.753712Z","shell.execute_reply":"2024-08-19T19:25:08.966902Z"},"trusted":true},"execution_count":22,"outputs":[{"execution_count":22,"output_type":"execute_result","data":{"text/plain":"      deeds  reason  earthquake  may  allah  forgive  forest  fire  near  la  \\\n0         1       1           1    1      1        1       0     0     0   0   \n1         0       0           0    0      0        0       1     1     1   1   \n2         0       0           0    0      0        0       0     0     0   0   \n3         0       0           0    0      0        0       0     0     0   0   \n4         0       0           0    0      0        0       0     0     0   0   \n...     ...     ...         ...  ...    ...      ...     ...   ...   ...  ..   \n7608      0       0           0    0      0        0       0     0     0   0   \n7609      0       0           0    0      0        0       0     0     0   0   \n7610      0       0           0    0      0        0       0     0     0   0   \n7611      0       0           0    0      0        0       0     0     0   0   \n7612      0       0           0    0      0        0       0     0     0   0   \n\n      ...  9km  httptco5uecmcv2pk  forney  developing  symptoms  \\\n0     ...    0                  0       0           0         0   \n1     ...    0                  0       0           0         0   \n2     ...    0                  0       0           0         0   \n3     ...    0                  0       0           0         0   \n4     ...    0                  0       0           0         0   \n...   ...  ...                ...     ...         ...       ...   \n7608  ...    0                  0       0           0         0   \n7609  ...    0                  0       0           0         0   \n7610  ...    0                  0       0           0         0   \n7611  ...    0                  0       0           0         0   \n7612  ...    0                  0       0           0         0   \n\n      httptcorqkk15uhey  httptconf4iculoje  httptcostfmbbzfb5  \\\n0                     0                  0                  0   \n1                     0                  0                  0   \n2                     0                  0                  0   \n3                     0                  0                  0   \n4                     0                  0                  0   \n...                 ...                ...                ...   \n7608                  0                  0                  1   \n7609                  0                  0                  0   \n7610                  0                  0                  0   \n7611                  0                  0                  0   \n7612                  0                  0                  0   \n\n      httptcoymy4rskq3d  tweet_length  \n0                     0            41  \n1                     0            37  \n2                     0            88  \n3                     0            52  \n4                     0            51  \n...                 ...           ...  \n7608                  0            71  \n7609                  0            88  \n7610                  0            49  \n7611                  0           113  \n7612                  1            74  \n\n[7613 rows x 22561 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>deeds</th>\n      <th>reason</th>\n      <th>earthquake</th>\n      <th>may</th>\n      <th>allah</th>\n      <th>forgive</th>\n      <th>forest</th>\n      <th>fire</th>\n      <th>near</th>\n      <th>la</th>\n      <th>...</th>\n      <th>9km</th>\n      <th>httptco5uecmcv2pk</th>\n      <th>forney</th>\n      <th>developing</th>\n      <th>symptoms</th>\n      <th>httptcorqkk15uhey</th>\n      <th>httptconf4iculoje</th>\n      <th>httptcostfmbbzfb5</th>\n      <th>httptcoymy4rskq3d</th>\n      <th>tweet_length</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>41</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>37</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>88</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>52</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>51</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>7608</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>71</td>\n    </tr>\n    <tr>\n      <th>7609</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>88</td>\n    </tr>\n    <tr>\n      <th>7610</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>49</td>\n    </tr>\n    <tr>\n      <th>7611</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>113</td>\n    </tr>\n    <tr>\n      <th>7612</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>74</td>\n    </tr>\n  </tbody>\n</table>\n<p>7613 rows × 22561 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(X, Y, test_size = 0.3, random_state = 1000)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:08.970765Z","iopub.execute_input":"2024-08-19T19:25:08.971256Z","iopub.status.idle":"2024-08-19T19:25:09.888731Z","shell.execute_reply.started":"2024-08-19T19:25:08.971208Z","shell.execute_reply":"2024-08-19T19:25:09.887476Z"},"trusted":true},"execution_count":23,"outputs":[]},{"cell_type":"code","source":"from sklearn.linear_model import LogisticRegression\nmodel1 = LogisticRegression()\nmodel1.fit(x_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:09.890029Z","iopub.execute_input":"2024-08-19T19:25:09.890372Z","iopub.status.idle":"2024-08-19T19:25:30.399805Z","shell.execute_reply.started":"2024-08-19T19:25:09.890344Z","shell.execute_reply":"2024-08-19T19:25:30.398084Z"},"trusted":true},"execution_count":24,"outputs":[{"execution_count":24,"output_type":"execute_result","data":{"text/plain":"LogisticRegression()","text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"model1.score(x_test, y_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:30.402061Z","iopub.execute_input":"2024-08-19T19:25:30.404912Z","iopub.status.idle":"2024-08-19T19:25:31.265779Z","shell.execute_reply.started":"2024-08-19T19:25:30.404853Z","shell.execute_reply":"2024-08-19T19:25:31.264253Z"},"trusted":true},"execution_count":25,"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"0.7990367775831874"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.naive_bayes import MultinomialNB\nmodel = MultinomialNB()\nmodel.fit(x_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:31.268057Z","iopub.execute_input":"2024-08-19T19:25:31.269009Z","iopub.status.idle":"2024-08-19T19:25:32.376238Z","shell.execute_reply.started":"2024-08-19T19:25:31.268958Z","shell.execute_reply":"2024-08-19T19:25:32.375017Z"},"trusted":true},"execution_count":26,"outputs":[{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"MultinomialNB()","text/html":"<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>MultinomialNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">MultinomialNB</label><div class=\"sk-toggleable__content\"><pre>MultinomialNB()</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"model.score(x_test, y_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:32.377784Z","iopub.execute_input":"2024-08-19T19:25:32.378163Z","iopub.status.idle":"2024-08-19T19:25:33.213063Z","shell.execute_reply.started":"2024-08-19T19:25:32.378131Z","shell.execute_reply":"2024-08-19T19:25:33.21193Z"},"trusted":true},"execution_count":27,"outputs":[{"execution_count":27,"output_type":"execute_result","data":{"text/plain":"0.7994746059544658"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.metrics import classification_report, confusion_matrix\nimport pickle\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\ny_prediction = model.predict(x_test)\nprint(classification_report(y_test, y_prediction))","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:33.215145Z","iopub.execute_input":"2024-08-19T19:25:33.215867Z","iopub.status.idle":"2024-08-19T19:25:34.135371Z","shell.execute_reply.started":"2024-08-19T19:25:33.215792Z","shell.execute_reply":"2024-08-19T19:25:34.128801Z"},"trusted":true},"execution_count":28,"outputs":[{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       0.81      0.85      0.83      1331\n           1       0.78      0.73      0.75       953\n\n    accuracy                           0.80      2284\n   macro avg       0.80      0.79      0.79      2284\nweighted avg       0.80      0.80      0.80      2284\n\n","output_type":"stream"}]},{"cell_type":"code","source":"confusion = confusion_matrix(y_test, y_prediction)\nsns.heatmap(confusion, annot=True, fmt='d', cmap='Blues', xticklabels=['Non-Disaster', 'Disaster'], yticklabels=['Non-Disaster', 'Disaster'])\nplt.title('Confusion Matrix')\nplt.xlabel('Predicted')\nplt.ylabel('Actual')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:34.138163Z","iopub.execute_input":"2024-08-19T19:25:34.138838Z","iopub.status.idle":"2024-08-19T19:25:34.432262Z","shell.execute_reply.started":"2024-08-19T19:25:34.138782Z","shell.execute_reply":"2024-08-19T19:25:34.430943Z"},"trusted":true},"execution_count":29,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 2 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"sub_data = pd.read_csv('/kaggle/input/test.csv')\ntest = new_df(sub_data)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:34.433749Z","iopub.execute_input":"2024-08-19T19:25:34.434146Z","iopub.status.idle":"2024-08-19T19:25:35.929845Z","shell.execute_reply.started":"2024-08-19T19:25:34.434111Z","shell.execute_reply":"2024-08-19T19:25:35.928403Z"},"trusted":true},"execution_count":30,"outputs":[]},{"cell_type":"code","source":"test","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:35.931228Z","iopub.execute_input":"2024-08-19T19:25:35.931592Z","iopub.status.idle":"2024-08-19T19:25:35.964619Z","shell.execute_reply.started":"2024-08-19T19:25:35.931546Z","shell.execute_reply":"2024-08-19T19:25:35.963266Z"},"trusted":true},"execution_count":31,"outputs":[{"execution_count":31,"output_type":"execute_result","data":{"text/plain":"      deeds  reason  earthquake  may  allah  forgive  forest  fire  near  la  \\\n0         0       0           0    0      0        0       0     0     0   0   \n1         0       0           1    0      0        0       0     0     0   0   \n2         0       0           0    0      0        0       1     1     0   0   \n3         0       0           0    0      0        0       0     0     0   0   \n4         0       0           0    0      0        0       0     0     0   0   \n...     ...     ...         ...  ...    ...      ...     ...   ...   ...  ..   \n3258      0       0           1    0      0        0       0     0     0   0   \n3259      0       0           0    0      0        0       0     0     0   0   \n3260      0       0           0    0      0        0       0     0     0   0   \n3261      0       0           0    0      0        0       0     0     0   0   \n3262      0       0           0    0      0        0       0     0     0   0   \n\n      ...  9km  httptco5uecmcv2pk  forney  developing  symptoms  \\\n0     ...    0                  0       0           0         0   \n1     ...    0                  0       0           0         0   \n2     ...    0                  0       0           0         0   \n3     ...    0                  0       0           0         0   \n4     ...    0                  0       0           0         0   \n...   ...  ...                ...     ...         ...       ...   \n3258  ...    0                  0       0           0         0   \n3259  ...    0                  0       0           0         0   \n3260  ...    0                  0       0           0         0   \n3261  ...    0                  0       0           0         0   \n3262  ...    0                  0       0           0         0   \n\n      httptcorqkk15uhey  httptconf4iculoje  httptcostfmbbzfb5  \\\n0                     0                  0                  0   \n1                     0                  0                  0   \n2                     0                  0                  0   \n3                     0                  0                  0   \n4                     0                  0                  0   \n...                 ...                ...                ...   \n3258                  0                  0                  0   \n3259                  0                  0                  0   \n3260                  0                  0                  0   \n3261                  0                  0                  0   \n3262                  0                  0                  0   \n\n      httptcoymy4rskq3d  tweet_length  \n0                     0            27  \n1                     0            52  \n2                     0            61  \n3                     0            37  \n4                     0            38  \n...                 ...           ...  \n3258                  0            54  \n3259                  0           102  \n3260                  0            47  \n3261                  0            58  \n3262                  0            57  \n\n[3263 rows x 22561 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>deeds</th>\n      <th>reason</th>\n      <th>earthquake</th>\n      <th>may</th>\n      <th>allah</th>\n      <th>forgive</th>\n      <th>forest</th>\n      <th>fire</th>\n      <th>near</th>\n      <th>la</th>\n      <th>...</th>\n      <th>9km</th>\n      <th>httptco5uecmcv2pk</th>\n      <th>forney</th>\n      <th>developing</th>\n      <th>symptoms</th>\n      <th>httptcorqkk15uhey</th>\n      <th>httptconf4iculoje</th>\n      <th>httptcostfmbbzfb5</th>\n      <th>httptcoymy4rskq3d</th>\n      <th>tweet_length</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>27</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>52</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>61</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>37</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>38</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>3258</th>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>54</td>\n    </tr>\n    <tr>\n      <th>3259</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>102</td>\n    </tr>\n    <tr>\n      <th>3260</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>47</td>\n    </tr>\n    <tr>\n      <th>3261</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>58</td>\n    </tr>\n    <tr>\n      <th>3262</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>57</td>\n    </tr>\n  </tbody>\n</table>\n<p>3263 rows × 22561 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"submition_data = model.predict(test)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:35.966319Z","iopub.execute_input":"2024-08-19T19:25:35.96684Z","iopub.status.idle":"2024-08-19T19:25:36.997885Z","shell.execute_reply.started":"2024-08-19T19:25:35.966805Z","shell.execute_reply":"2024-08-19T19:25:36.995902Z"},"trusted":true},"execution_count":32,"outputs":[]},{"cell_type":"code","source":"output = pd.DataFrame({'id': sub_data['id'], 'target': submition_data})\noutput.to_csv('nlb.csv', index=False)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T19:25:36.999986Z","iopub.execute_input":"2024-08-19T19:25:37.000824Z","iopub.status.idle":"2024-08-19T19:25:37.019066Z","shell.execute_reply.started":"2024-08-19T19:25:37.000781Z","shell.execute_reply":"2024-08-19T19:25:37.017347Z"},"trusted":true},"execution_count":33,"outputs":[]},{"cell_type":"markdown","source":"","metadata":{}}]}